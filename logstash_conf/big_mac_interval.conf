input {
  jdbc {
    jdbc_driver_library => "C:/02.devEnv/ELK/logstash-7.11.1/mysql-connector-java-8.0.16.jar"  # JAR 파일 경로
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://localhost:3306/lovetooth?serverTimezone=Asia/Seoul&useSSL=false"  # 데이터베이스 정보
    jdbc_user => {DB_USER_NAME}  # MySQL 사용자 이름
    jdbc_password => {DB_USER_PASSWORD}  # MySQL 비밀번호
    statement => "SELECT * FROM big_mac_wage_tour where DATE_SUB(updated_at, INTERVAL 9 HOUR)> :sql_last_value;"  # SQL 쿼리
    use_column_value => true  # 컬럼 값을 사용하여 마지막 값을 추적
    tracking_column => "updated_at"  # `updated_at` 기준으로 추적
    tracking_column_type => "timestamp"  # `updated_at`은 timestamp 형식
    last_run_metadata_path => "C:/02.devEnv/ELK/logstash-7.11.1/bigmac-logstash-last-run-metadata"  # 마지막 실행에서 처리된 값을 기록할 경로
    schedule => "* * * * *"  # 1분마다 실행
  }
}

filter {
  mutate {
    convert => {
      "local_price" => "float"
      "dollar_ex" => "float"
      "dollar_price" => "float"
      "USD_raw" => "float"
      "EUR_raw" => "float"
      "GBP_raw" => "float"
      "JPY_raw" => "float"
      "CNY_raw" => "float"
      "GDP_dollar" => "float"
      "adj_price" => "float"
      "USD_adjusted" => "float"
      "EUR_adjusted" => "float"
      "GBP_adjusted" => "float"
      "JPY_adjusted" => "float"
      "CNY_adjusted" => "float"
      "min_wage" => "float"
      "visitors" => "float"
      "income " => "float"
      "outcome " => "float"
    }
  }
  # "date" 필드를 이용하여 Elasticsearch에서 인식할 수 있는 date 타입의 형태로 필드를 추가
  date {
    match => [ "date", "yyyyMMdd"]
    timezone => "Asia/Seoul"
    target => "date"
  }
  
}

output {

  # 콘솔창에 어떤 데이터들로 필터링 되었는지 확인
  stdout {
    codec => rubydebug
  }

  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "big_mac_wage_tour"
  }
}
